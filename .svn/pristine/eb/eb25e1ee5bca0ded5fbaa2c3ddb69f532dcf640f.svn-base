var ambulance = require('../database/ambulance.js');
var appointments = require('../database/appointments.js');
var async = require('async');

exports.renderOpdDashboard = function (req, res, next) {

  var data = {}
  data.totalPatients = 3000;
  data.totalMales = 2000;
  data.totalFemales = 1000;
  data.cancellations = 50;
  var deptName = req.params.deptType;
  var dateApp = req.params.aptDate;
  var actualDate = new Date();
  var minDate = new Date(actualDate.getFullYear(), actualDate.getMonth(), actualDate.getDate() - 1);
  var maxDate = new Date(actualDate.getFullYear(), actualDate.getMonth(), actualDate.getDate() + 1);

  var countPatients = function (callback) {
    appointments.find({
      "startdate": {
        $gt: new Date(minDate)
      },
      "enddate": {
        $lt: new Date(maxDate)
      },
    }, function (err, data) {
      if (err) {
        res.status(500).send(err);
      } else {
        callback(null, data);
      }
    })
  }

  var countMales = function (callback) {

  }
  var countFemales = function (callback) {

  }
  var countCancellation = function (callback) {

  }
  async.waterfall([
    countPatients,
    countMales,
    countFemales,
    countCancellation
  ], function (err, results) {

  })

  res.render('opd', {
    data: data,
    title: 'QuickBot',
    partials: {
      header: 'header',
      footer: 'footer',
    }
  });
}

exports.getAppoinments = function (req, res, next) {

  var deptName = req.params.deptType;
  var dateApp = req.params.aptDate;
  var actualDate = new Date();
  var minDate = new Date(actualDate.getFullYear(), actualDate.getMonth(), actualDate.getDate() - 1);
  var maxDate = new Date(actualDate.getFullYear(), actualDate.getMonth(), actualDate.getDate() + 1);
  appointments.find({
    "startdate": {
      $gt: new Date(minDate)
    },
    "enddate": {
      $lt: new Date(maxDate)
    }
  }, function (err, data) {
    if (err) {
      res.status(500).send(err);
    } else {
      res.send(data);
    }
  })

}